<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <property name="LOG_PATH" value="logs" />

    <!-- prod profile -->
    <springProfile name="prod">
        <property name="LOGSTASH_HOST" value="${LOGSTASH_HOST_PROD:logstash}" />
        <property name="LOGSTASH_PORT" value="${LOGSTASH_PORT_PROD:5000}" />
    </springProfile>

    <!-- local profile -->
    <springProfile name="!prod">
        <property name="LOGSTASH_HOST" value="${LOGSTASH_HOST:localhost}" />
        <property name="LOGSTASH_PORT" value="${LOGSTASH_PORT:5000}" />
    </springProfile>

    <!-- Logstash로 로그 전송하는 appender(로그 메시지를 출력할 위치를 결정하는 컴포넌트) 설정 -->
    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
<!--        <destination>${LOGSTASH_HOST}:${LOGSTASH_PORT}</destination>-->
        <destination>logstash:5000</destination>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "level": "%level",
                        "logger": "%logger",
                        "thread": "%thread",
                        "traceId": "%X{traceId}",
                        "loginId": "%X{loginId}",
                        "pageId": "%X{pageId}",
                        "message": "%replace(%message){'(?i)(password\\s*[:=]\\s*)[^,\\s\"]+', '$1****'}",
                        "errorCode": "%X{errorCode}",
                        "details": "%X{details}",
                        "exception": "%replace(%exception){'(?i)(password\\s*[:=]\\s*)[^,\\s\"]+', '$1****'}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- JSON 파일 로그 (ELK 연동용) -->
    <appender name="JSON_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/app-log.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/app-log-%d{yyyy-MM-dd}.json</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "level": "%level",
                        "logger": "%logger",
                        "thread": "%thread",
                        "traceId": "%X{traceId}",
                        "loginId": "%X{loginId}",
                        "pageId": "%X{pageId}",
                        "message": "%replace(%message){'(?i)(password\\s*[:=]\\s*)[^,\\s\"]+', '$1****'}",
                        "errorCode": "%X{errorCode}",
                        "details": "%X{details}",
                        "exception": "%replace(%exception){'(?i)(password\\s*[:=]\\s*)[^,\\s\"]+', '$1****'}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- 로그 레벨 및 Appender 지정 -->
    <root level="INFO">
        <appender-ref ref="LOGSTASH"/>
        <appender-ref ref="JSON_FILE"/>
    </root>
</configuration>
