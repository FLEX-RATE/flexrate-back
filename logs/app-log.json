{"timestamp":"2025-05-08T08:46:22.468+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 8528 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T08:46:22.492+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T08:46:22.494+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T08:46:22.556+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T08:46:22.556+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T08:46:25.039+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T08:46:25.040+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T08:46:25.240+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 195 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T08:46:25.268+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T08:46:25.270+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T08:46:25.289+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T08:46:25.289+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T08:46:25.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T08:46:25.306+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T08:46:25.309+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T08:46:25.309+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T08:46:26.655+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T08:46:26.658+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T08:46:26.669+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T08:46:26.732+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T08:46:26.732+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 4176 ms","exception":""}
{"timestamp":"2025-05-08T08:46:27.254+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T08:46:27.254+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T08:46:27.636+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f07c541","exception":""}
{"timestamp":"2025-05-08T08:46:27.637+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T08:46:27.688+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T08:46:27.810+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T08:46:27.838+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T08:46:27.845+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T08:46:27.990+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T08:46:28.069+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T08:46:28.117+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T08:46:28.493+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T08:46:28.559+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T08:46:28.573+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T08:46:30.631+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T08:46:30.703+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consume_goal enum ('CLOTHING_UNDER_100K','COMPARE_BEFORE_BUYING','HAS_HOUSING_SAVING','INCOME_OVER_EXPENSE','LIMIT_DAILY_MEAL','MEAL_UNDER_20K','NO_EXPENSIVE_DESSERT','NO_OVER_50K_PER_DAY','NO_SPENDING_TODAY','NO_USELESS_ELECTRONICS','ONE_CATEGORY_SPEND','ONLY_PUBLIC_TRANSPORT','OVER_10_PERCENT','SAVE_70_PERCENT','SMALL_MONTHLY_SAVE','SUBSCRIPTION_UNDER_50K') not null","exception":""}
{"timestamp":"2025-05-08T08:46:30.735+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consumption_type enum ('BALANCED','CONSERVATIVE','CONSUMPTION_ORIENTED','PRACTICAL')","exception":""}
{"timestamp":"2025-05-08T08:46:30.865+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T08:46:32.140+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T08:46:32.218+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T08:46:32.233+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T08:46:33.819+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T08:46:35.359+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T08:46:35.563+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T08:46:35.626+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 14.365 seconds (process running for 14.86)","exception":""}
{"timestamp":"2025-05-08T08:46:56.071+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T08:46:56.071+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T08:46:56.071+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T08:46:57.351+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 813 ms","exception":""}
{"timestamp":"2025-05-08T09:44:00.062+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 11836 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T09:44:00.078+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T09:44:00.083+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T09:44:00.170+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T09:44:00.171+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T09:44:02.192+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T09:44:02.194+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T09:44:02.375+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 176 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T09:44:02.404+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T09:44:02.407+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T09:44:02.436+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T09:44:02.438+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T09:44:02.439+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T09:44:02.440+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T09:44:02.440+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T09:44:02.444+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T09:44:03.750+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T09:44:03.779+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T09:44:03.779+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T09:44:03.852+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T09:44:03.853+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3681 ms","exception":""}
{"timestamp":"2025-05-08T09:44:04.359+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T09:44:04.361+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T09:44:04.699+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b3cd7b8","exception":""}
{"timestamp":"2025-05-08T09:44:04.702+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T09:44:04.769+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T09:44:04.915+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.048s)","exception":""}
{"timestamp":"2025-05-08T09:44:04.947+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T09:44:04.955+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T09:44:05.101+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T09:44:05.174+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T09:44:05.242+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T09:44:05.555+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T09:44:05.634+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T09:44:05.654+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T09:44:07.356+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T09:44:07.434+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consume_goal enum ('CLOTHING_UNDER_100K','COMPARE_BEFORE_BUYING','HAS_HOUSING_SAVING','INCOME_OVER_EXPENSE','LIMIT_DAILY_MEAL','MEAL_UNDER_20K','NO_EXPENSIVE_DESSERT','NO_OVER_50K_PER_DAY','NO_SPENDING_TODAY','NO_USELESS_ELECTRONICS','ONE_CATEGORY_SPEND','ONLY_PUBLIC_TRANSPORT','OVER_10_PERCENT','SAVE_70_PERCENT','SMALL_MONTHLY_SAVE','SUBSCRIPTION_UNDER_50K') not null","exception":""}
{"timestamp":"2025-05-08T09:44:07.506+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consumption_type enum ('BALANCED','CONSERVATIVE','CONSUMPTION_ORIENTED','PRACTICAL')","exception":""}
{"timestamp":"2025-05-08T09:44:07.660+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T09:44:08.903+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T09:44:08.964+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T09:44:08.981+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T09:44:10.311+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T09:44:11.667+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T09:44:11.806+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T09:44:11.834+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 13.016 seconds (process running for 13.646)","exception":""}
{"timestamp":"2025-05-08T09:46:12.032+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T09:46:12.032+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T09:46:12.032+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T09:46:12.402+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T09:46:12.587+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T09:46:12.647+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:04:21.491+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 15100 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:04:21.491+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:04:21.491+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:04:21.566+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:04:21.566+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:04:23.573+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:04:23.573+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:04:23.794+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 212 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:04:23.846+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:04:23.846+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:04:23.879+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:04:23.879+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:04:23.879+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:04:23.879+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:04:23.894+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:04:23.894+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:04:25.424+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:04:25.424+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:04:25.440+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:04:25.503+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:04:25.503+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3937 ms","exception":""}
{"timestamp":"2025-05-08T10:04:26.054+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:04:26.054+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:04:26.407+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2145050a","exception":""}
{"timestamp":"2025-05-08T10:04:26.409+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:04:26.461+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:04:26.577+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.046s)","exception":""}
{"timestamp":"2025-05-08T10:04:26.603+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:04:26.609+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:04:26.741+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:04:26.815+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:04:26.846+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:04:27.131+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:04:27.202+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:04:27.208+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:04:28.392+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:04:28.402+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:04:29.128+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:04:29.160+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:04:29.176+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:04:30.000+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:04:30.867+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:04:30.961+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:04:30.977+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.524 seconds (process running for 11.127)","exception":""}
{"timestamp":"2025-05-08T10:04:42.420+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:04:42.421+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:04:42.421+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:04:43.488+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-10","message":"Init duration for springdoc-openapi is: 683 ms","exception":""}
{"timestamp":"2025-05-08T10:05:18.339+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:05:18.591+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:05:18.644+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:05:56.953+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 16040 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:05:56.961+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:05:56.961+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:05:57.023+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:05:57.023+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:05:58.643+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:05:58.643+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:05:58.831+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 181 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:05:58.862+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:05:58.862+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:05:58.895+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:05:58.895+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:05:58.895+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:05:58.895+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:05:58.895+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:05:58.895+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:06:00.122+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:06:00.138+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:06:00.138+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:06:00.218+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:06:00.218+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3195 ms","exception":""}
{"timestamp":"2025-05-08T10:06:00.705+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:06:00.705+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:06:01.023+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40259601","exception":""}
{"timestamp":"2025-05-08T10:06:01.026+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:06:01.081+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:06:01.195+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.043s)","exception":""}
{"timestamp":"2025-05-08T10:06:01.225+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:06:01.228+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:06:01.379+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:06:01.442+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:06:01.490+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:06:01.805+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:06:01.867+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:06:01.871+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:06:03.014+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:06:03.014+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:06:03.809+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:06:03.841+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:06:03.856+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:06:04.768+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:06:05.669+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:06:05.763+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:06:05.779+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.043 seconds (process running for 10.704)","exception":""}
{"timestamp":"2025-05-08T10:06:21.085+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:06:21.085+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:06:21.085+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:06:22.290+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 770 ms","exception":""}
{"timestamp":"2025-05-08T10:08:01.216+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:08:01.519+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:08:01.568+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:09:15.601+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 18924 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:09:15.603+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:09:15.603+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:09:15.681+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:09:15.681+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:09:17.387+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:09:17.393+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:09:17.567+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 166 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:09:17.587+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:09:17.587+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:09:17.616+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:09:17.616+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:09:17.616+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:09:17.616+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:09:17.616+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:09:17.616+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:09:19.111+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:09:19.132+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:09:19.133+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:09:19.206+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:09:19.206+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3525 ms","exception":""}
{"timestamp":"2025-05-08T10:09:19.742+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:09:19.742+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:09:20.069+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@278741","exception":""}
{"timestamp":"2025-05-08T10:09:20.072+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:09:20.126+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:09:20.236+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.044s)","exception":""}
{"timestamp":"2025-05-08T10:09:20.266+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:09:20.272+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:09:20.400+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:09:20.473+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:09:20.520+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:09:20.819+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:09:20.886+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:09:20.897+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:09:22.028+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:09:22.028+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:09:22.886+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:09:22.918+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:09:22.935+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:09:23.752+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:09:24.626+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:09:24.705+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:09:24.739+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.28 seconds (process running for 10.905)","exception":""}
{"timestamp":"2025-05-08T10:09:32.830+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:09:32.830+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:09:32.846+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 16 ms","exception":""}
{"timestamp":"2025-05-08T10:09:33.896+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 657 ms","exception":""}
{"timestamp":"2025-05-08T10:09:44.861+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-10","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:10:03.179+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-1","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:10:47.746+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 11728 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:10:47.756+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:10:47.757+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:10:47.810+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:10:47.811+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:10:49.513+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:10:49.513+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:10:49.691+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 170 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:10:49.721+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:10:49.721+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:10:49.759+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:10:49.759+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:10:49.759+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:10:49.759+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:10:49.759+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:10:49.759+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:10:51.011+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:10:51.026+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:10:51.026+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:10:51.105+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:10:51.105+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3293 ms","exception":""}
{"timestamp":"2025-05-08T10:10:51.577+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:10:51.577+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:10:51.883+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66ac8e45","exception":""}
{"timestamp":"2025-05-08T10:10:51.885+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:10:51.938+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:10:52.049+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.041s)","exception":""}
{"timestamp":"2025-05-08T10:10:52.074+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:10:52.081+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:10:52.206+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:10:52.249+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:10:52.296+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:10:52.610+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:10:52.669+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:10:52.672+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:10:53.889+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:10:53.892+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:10:54.809+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:10:54.843+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:10:54.861+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:10:55.760+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:10:56.767+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:10:56.869+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:10:56.884+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.207 seconds (process running for 10.754)","exception":""}
{"timestamp":"2025-05-08T10:10:57.076+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:10:57.076+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:10:57.076+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:10:58.275+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 645 ms","exception":""}
{"timestamp":"2025-05-08T10:11:03.927+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-1","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:12:03.126+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-6","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:12:16.645+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-3","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:12:38.027+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-5","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:12:56.758+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:16:02.115+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-8","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:16:22.616+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 18036 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:16:22.632+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:16:22.632+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:16:22.700+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:16:22.700+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:16:24.347+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:16:24.347+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:16:24.537+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 182 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:16:24.552+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:16:24.552+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:16:24.584+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:24.584+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:24.584+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:24.584+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:24.584+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:24.584+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:16:25.831+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:16:25.846+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:16:25.846+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:16:25.925+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:16:25.925+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3225 ms","exception":""}
{"timestamp":"2025-05-08T10:16:26.404+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:16:26.404+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:16:26.706+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40259601","exception":""}
{"timestamp":"2025-05-08T10:16:26.708+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:16:26.752+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:16:26.864+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.046s)","exception":""}
{"timestamp":"2025-05-08T10:16:26.891+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:16:26.900+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:16:27.023+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:16:27.087+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:16:27.134+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:16:27.435+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:16:27.500+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:16:27.513+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:16:28.699+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:16:28.704+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:16:29.615+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:16:29.653+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:16:29.670+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:16:30.600+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:16:31.542+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:16:31.642+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:16:31.653+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.153 seconds (process running for 10.739)","exception":""}
{"timestamp":"2025-05-08T10:16:34.637+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 20112 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:16:34.646+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:16:34.646+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:16:34.711+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:16:34.711+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:16:36.243+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:16:36.243+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:16:36.429+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 176 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:16:36.438+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:16:36.454+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:16:36.478+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:36.478+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:36.478+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:36.478+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:36.478+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:16:36.478+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:16:37.658+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:16:37.680+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:16:37.680+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:16:37.753+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:16:37.753+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3042 ms","exception":""}
{"timestamp":"2025-05-08T10:16:38.226+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:16:38.232+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:16:38.539+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66ac8e45","exception":""}
{"timestamp":"2025-05-08T10:16:38.540+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:16:38.591+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:16:38.707+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.045s)","exception":""}
{"timestamp":"2025-05-08T10:16:38.747+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:16:38.754+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:16:38.889+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:16:38.950+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:16:38.989+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:16:39.307+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:16:39.381+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:16:39.386+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:16:40.541+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:16:40.541+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:16:41.335+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:16:41.382+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:16:41.382+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:16:42.231+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:16:43.091+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:16:43.170+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:16:43.186+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.66 seconds (process running for 10.311)","exception":""}
{"timestamp":"2025-05-08T10:17:52.001+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 10328 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:17:52.012+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:17:52.013+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:17:52.077+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:17:52.078+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:17:53.651+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:17:53.651+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:17:53.871+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 206 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:17:53.905+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:17:53.905+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:17:53.936+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:17:53.936+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:17:53.936+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:17:53.936+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:17:53.936+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:17:53.936+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:17:55.249+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:17:55.261+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:17:55.261+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:17:55.325+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:17:55.325+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3246 ms","exception":""}
{"timestamp":"2025-05-08T10:17:55.837+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:17:55.839+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:17:56.131+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25d04386","exception":""}
{"timestamp":"2025-05-08T10:17:56.133+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:17:56.193+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:17:56.305+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.036s)","exception":""}
{"timestamp":"2025-05-08T10:17:56.359+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:17:56.365+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:17:56.506+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:17:56.566+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:17:56.608+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:17:56.937+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:17:57.018+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:17:57.022+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:17:58.193+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:17:58.193+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:17:58.995+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:17:59.039+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:17:59.052+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:18:00.042+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:18:01.090+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:18:01.178+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:18:01.201+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.341 seconds (process running for 10.936)","exception":""}
{"timestamp":"2025-05-08T10:21:21.887+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 19448 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:21:21.894+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:21:21.894+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:21:21.959+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:21:21.959+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:21:23.511+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:21:23.511+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:21:23.680+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 161 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:21:23.695+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:21:23.706+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:21:23.727+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:21:23.727+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:21:23.727+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:21:23.727+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:21:23.727+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:21:23.727+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:21:25.024+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:21:25.039+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:21:25.039+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:21:25.121+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:21:25.122+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3163 ms","exception":""}
{"timestamp":"2025-05-08T10:21:25.607+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:21:25.607+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:21:25.902+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@35741eb9","exception":""}
{"timestamp":"2025-05-08T10:21:25.903+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:21:25.954+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:21:26.060+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.047s)","exception":""}
{"timestamp":"2025-05-08T10:21:26.087+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:21:26.092+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:21:26.222+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:21:26.265+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:21:26.312+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:21:26.615+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:21:26.676+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:21:26.678+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:21:27.799+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:21:27.799+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:21:28.565+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:21:28.613+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:21:28.629+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:21:29.498+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:21:30.391+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:21:30.480+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:21:30.493+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.688 seconds (process running for 10.23)","exception":""}
{"timestamp":"2025-05-08T10:21:42.035+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:21:42.035+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:21:42.048+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 13 ms","exception":""}
{"timestamp":"2025-05-08T10:21:42.967+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 559 ms","exception":""}
{"timestamp":"2025-05-08T10:21:47.356+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:21:47.589+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:21:47.631+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:22:46.609+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 5640 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:22:46.623+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:22:46.623+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:22:46.684+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:22:46.686+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:22:48.232+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:22:48.232+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:22:48.408+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 159 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:22:48.416+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:22:48.416+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:22:48.448+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:22:48.448+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:22:48.448+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:22:48.448+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:22:48.448+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:22:48.448+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:22:49.660+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:22:49.675+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:22:49.675+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:22:49.762+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:22:49.763+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3077 ms","exception":""}
{"timestamp":"2025-05-08T10:22:50.235+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:22:50.235+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:22:50.557+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@559cb17","exception":""}
{"timestamp":"2025-05-08T10:22:50.559+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:22:50.611+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:22:50.716+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.039s)","exception":""}
{"timestamp":"2025-05-08T10:22:50.745+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:22:50.751+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:22:50.888+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:22:50.950+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:22:50.976+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:22:51.306+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:22:51.374+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:22:51.386+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:22:52.480+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:22:52.480+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:22:53.352+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:22:53.402+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:22:53.419+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:22:54.473+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:22:55.540+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:22:55.645+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:22:55.667+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.173 seconds (process running for 10.707)","exception":""}
{"timestamp":"2025-05-08T10:23:25.247+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:23:25.247+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:23:25.247+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:23:25.501+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-1","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:23:35.899+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:24:53.709+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 18212 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:24:53.721+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:24:53.721+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:24:53.778+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:24:53.778+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:24:55.387+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:24:55.390+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:24:55.573+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 173 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:24:55.587+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:24:55.603+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:24:55.619+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:24:55.619+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:24:55.619+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:24:55.619+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:24:55.635+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:24:55.635+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:24:56.949+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:24:56.980+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:24:56.980+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:24:57.047+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:24:57.047+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3269 ms","exception":""}
{"timestamp":"2025-05-08T10:24:57.525+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:24:57.525+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:24:57.839+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56b922a9","exception":""}
{"timestamp":"2025-05-08T10:24:57.841+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:24:57.903+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:24:58.017+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T10:24:58.048+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:24:58.053+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:24:58.176+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:24:58.249+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:24:58.286+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:24:58.603+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:24:58.677+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:24:58.713+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:24:59.833+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:24:59.833+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:25:00.623+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:25:00.682+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:25:00.695+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:25:01.532+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:25:02.406+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:25:02.484+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:25:02.516+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.878 seconds (process running for 10.419)","exception":""}
{"timestamp":"2025-05-08T10:25:42.175+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:25:42.175+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:25:42.175+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:25:43.228+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 663 ms","exception":""}
{"timestamp":"2025-05-08T10:33:30.589+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-6","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:44:40.893+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T10:45:02.959+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 13436 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:45:02.969+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:45:02.969+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:45:03.036+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:45:03.036+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:45:04.548+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:45:04.548+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:45:04.722+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 167 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:45:04.753+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:45:04.753+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:45:04.770+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:45:04.785+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:45:04.785+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:45:04.785+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:45:04.785+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:45:04.785+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:45:05.953+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:45:05.969+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:45:05.969+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:45:06.048+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:45:06.050+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3014 ms","exception":""}
{"timestamp":"2025-05-08T10:45:06.523+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:45:06.523+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:45:06.846+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2a79a6b","exception":""}
{"timestamp":"2025-05-08T10:45:06.848+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:45:06.898+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:45:07.014+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.046s)","exception":""}
{"timestamp":"2025-05-08T10:45:07.042+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:45:07.050+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:45:07.181+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:45:07.228+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:45:07.276+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:45:07.592+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:45:07.662+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:45:07.671+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:45:08.824+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:45:08.824+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:45:09.622+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:45:09.668+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:45:09.684+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:45:10.577+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:45:11.494+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:45:11.592+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:45:11.623+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.744 seconds (process running for 10.316)","exception":""}
{"timestamp":"2025-05-08T10:45:38.222+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:45:38.222+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:45:38.222+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:45:38.641+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:45:38.878+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:45:38.930+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:45:38.935+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-2","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T10:45:38.936+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-2","message":"Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T10:45:38.952+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-2","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T10:45:38.972+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T10:46:37.807+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 3316 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T10:46:37.816+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T10:46:37.818+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T10:46:37.880+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T10:46:37.881+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T10:46:39.503+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:46:39.518+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:46:39.737+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 216 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:46:39.769+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T10:46:39.769+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T10:46:39.797+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:46:39.799+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:46:39.800+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:46:39.801+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:46:39.802+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T10:46:39.803+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T10:46:41.093+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T10:46:41.112+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T10:46:41.112+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T10:46:41.171+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T10:46:41.171+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3289 ms","exception":""}
{"timestamp":"2025-05-08T10:46:41.653+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T10:46:41.653+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T10:46:41.973+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c3dc5b8","exception":""}
{"timestamp":"2025-05-08T10:46:41.976+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T10:46:42.033+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T10:46:42.157+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.040s)","exception":""}
{"timestamp":"2025-05-08T10:46:42.182+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T10:46:42.187+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T10:46:42.319+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T10:46:42.374+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T10:46:42.436+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T10:46:42.736+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T10:46:42.822+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T10:46:42.836+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T10:46:43.923+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T10:46:43.923+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T10:46:44.725+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T10:46:44.756+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T10:46:44.756+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T10:46:45.641+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T10:46:46.511+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T10:46:46.620+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T10:46:46.635+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.926 seconds (process running for 10.495)","exception":""}
{"timestamp":"2025-05-08T10:49:48.678+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:49:48.678+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T10:49:48.678+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T10:49:49.079+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:49:49.118+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-2","message":"[A001] 이미 가입된 이메일입니다. | path=/api/auth/signup | detail=이미 가입된 이메일입니다.","exception":""}
{"timestamp":"2025-05-08T10:49:49.128+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 이미 가입된 이메일입니다.]","exception":""}
{"timestamp":"2025-05-08T10:49:53.243+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-3","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:49:53.256+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-3","message":"[A001] 이미 가입된 이메일입니다. | path=/api/auth/signup | detail=이미 가입된 이메일입니다.","exception":""}
{"timestamp":"2025-05-08T10:49:53.258+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-3","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 이미 가입된 이메일입니다.]","exception":""}
{"timestamp":"2025-05-08T10:50:23.114+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T10:50:23.377+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:50:23.423+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T10:50:23.430+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-6","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T10:50:23.431+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-6","message":"Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T10:50:23.448+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-6","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T10:50:23.462+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-6","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:06:24.095+0900","level":"WARN","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"HikariPool-1 housekeeper","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m11s846ms367µs500ns).","exception":""}
{"timestamp":"2025-05-08T11:09:03.712+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:09:03.799+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:09:03.813+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:09:03.816+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-7","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T11:09:03.817+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-7","message":"Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T11:09:03.822+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-7","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T11:09:03.828+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:12:19.140+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 20284 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:12:19.140+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:12:19.155+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:12:19.206+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:12:19.206+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:12:20.756+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:12:20.760+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:12:20.942+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 177 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:12:20.957+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:12:20.957+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:12:20.989+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:12:20.989+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:12:20.989+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:12:20.989+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:12:20.989+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:12:20.989+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:12:22.252+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:12:22.257+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:12:22.257+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:12:22.332+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:12:22.332+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3126 ms","exception":""}
{"timestamp":"2025-05-08T11:12:22.854+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:12:22.854+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:12:23.158+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ea71a65","exception":""}
{"timestamp":"2025-05-08T11:12:23.160+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:12:23.218+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:12:23.329+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.049s)","exception":""}
{"timestamp":"2025-05-08T11:12:23.363+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:12:23.369+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:12:23.534+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:12:23.640+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:12:23.742+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:12:24.074+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:12:24.174+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:12:24.189+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:12:25.437+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:12:25.439+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:12:26.218+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:12:26.269+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:12:26.280+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:12:27.227+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:12:28.171+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:12:28.270+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:12:28.289+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.271 seconds (process running for 10.821)","exception":""}
{"timestamp":"2025-05-08T11:14:03.694+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 21644 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:14:03.698+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:14:03.698+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:14:03.764+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:14:03.764+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:14:05.356+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:14:05.356+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:14:05.536+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 162 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:14:05.546+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:14:05.546+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:14:05.577+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:14:05.577+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:14:05.577+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:14:05.577+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:14:05.577+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:14:05.577+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:14:06.844+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:14:06.849+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:14:06.849+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:14:06.934+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:14:06.934+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3170 ms","exception":""}
{"timestamp":"2025-05-08T11:14:07.434+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:14:07.434+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:14:07.737+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@702371cd","exception":""}
{"timestamp":"2025-05-08T11:14:07.739+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:14:07.782+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:14:07.889+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.043s)","exception":""}
{"timestamp":"2025-05-08T11:14:07.917+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:14:07.923+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:14:08.047+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:14:08.099+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:14:08.145+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:14:08.452+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:14:08.517+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:14:08.531+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:14:09.676+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:14:09.676+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:14:10.636+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:14:10.679+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:14:10.693+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:14:12.034+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:14:13.558+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:14:13.678+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:14:13.707+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 11.065 seconds (process running for 11.57)","exception":""}
{"timestamp":"2025-05-08T11:14:33.977+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-7","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:14:33.977+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-7","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:14:33.991+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-7","message":"Completed initialization in 14 ms","exception":""}
{"timestamp":"2025-05-08T11:14:34.507+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:14:34.559+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-7","message":"[A001] 이미 가입된 이메일입니다. | path=/api/auth/signup | detail=이미 가입된 이메일입니다.","exception":""}
{"timestamp":"2025-05-08T11:14:34.576+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 이미 가입된 이메일입니다.]","exception":""}
{"timestamp":"2025-05-08T11:15:01.776+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:15:01.969+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:15:02.014+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:15:02.019+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-2","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T11:15:02.019+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-2","message":"Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T11:15:02.035+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-2","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T11:15:02.042+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:17:17.602+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:17:17.687+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:17:17.706+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:17:17.709+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-5","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T11:17:17.710+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-5","message":"Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T11:17:17.715+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-5","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T11:17:17.721+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-5","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:19:42.492+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 22124 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:19:42.492+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:19:42.492+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:19:42.559+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:19:42.559+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:19:44.083+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:19:44.083+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:19:44.257+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 167 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:19:44.272+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:19:44.272+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:19:44.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:19:44.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:19:44.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:19:44.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:19:44.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:19:44.304+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:19:45.554+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:19:45.569+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:19:45.569+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:19:45.642+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:19:45.642+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3083 ms","exception":""}
{"timestamp":"2025-05-08T11:19:46.146+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:19:46.146+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:19:46.449+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6505887c","exception":""}
{"timestamp":"2025-05-08T11:19:46.450+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:19:46.514+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:19:46.626+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T11:19:46.653+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:19:46.658+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:19:46.816+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:19:46.869+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:19:46.924+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:19:47.249+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:19:47.314+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:19:47.324+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:19:48.525+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:19:48.584+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consume_goal enum ('CLOTHING_UNDER_100K','COMPARE_BEFORE_BUYING','HAS_HOUSING_SAVING','INCOME_OVER_EXPENSE','LIMIT_DAILY_MEAL','MEAL_UNDER_20K','NO_EXPENSIVE_DESSERT','NO_OVER_50K_PER_DAY','NO_SPENDING_TODAY','NO_USELESS_ELECTRONICS','ONE_CATEGORY_SPEND','ONLY_PUBLIC_TRANSPORT','OVER_10_PERCENT','SAVE_70_PERCENT','SMALL_MONTHLY_SAVE','SUBSCRIPTION_UNDER_50K') not null","exception":""}
{"timestamp":"2025-05-08T11:19:48.623+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consumption_type enum ('BALANCED','CONSERVATIVE','CONSUMPTION_ORIENTED','PRACTICAL')","exception":""}
{"timestamp":"2025-05-08T11:19:48.742+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:19:49.625+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:19:49.672+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:19:49.677+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:19:50.550+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:19:51.428+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:19:51.524+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:19:51.549+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.16 seconds (process running for 10.689)","exception":""}
{"timestamp":"2025-05-08T11:20:30.206+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:20:30.206+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:20:30.223+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 16 ms","exception":""}
{"timestamp":"2025-05-08T11:20:30.661+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:20:30.939+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:20:31.000+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:20:31.009+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-2","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T11:20:31.010+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-2","message":"Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T11:20:31.030+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-2","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T11:20:31.063+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:25:49.361+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 21220 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:25:49.361+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:25:49.361+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:25:49.423+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:25:49.423+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:25:50.891+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:25:50.891+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:25:51.055+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 153 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:25:51.080+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:25:51.080+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:25:51.096+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:25:51.096+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:25:51.112+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:25:51.112+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:25:51.112+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:25:51.112+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:25:52.263+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:25:52.278+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:25:52.278+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:25:52.357+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:25:52.357+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 2934 ms","exception":""}
{"timestamp":"2025-05-08T11:25:52.830+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:25:52.845+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:25:53.155+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b086e46","exception":""}
{"timestamp":"2025-05-08T11:25:53.156+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:25:53.223+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:25:53.332+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.038s)","exception":""}
{"timestamp":"2025-05-08T11:25:53.361+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:25:53.366+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:25:53.489+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:25:53.558+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:25:53.600+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:25:53.896+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:25:53.965+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:25:53.974+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:25:55.075+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:25:55.124+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consume_goal enum ('CLOTHING_UNDER_100K','COMPARE_BEFORE_BUYING','HAS_HOUSING_SAVING','INCOME_OVER_EXPENSE','LIMIT_DAILY_MEAL','MEAL_UNDER_20K','NO_EXPENSIVE_DESSERT','NO_OVER_50K_PER_DAY','NO_SPENDING_TODAY','NO_USELESS_ELECTRONICS','ONE_CATEGORY_SPEND','ONLY_PUBLIC_TRANSPORT','OVER_10_PERCENT','SAVE_70_PERCENT','SMALL_MONTHLY_SAVE','SUBSCRIPTION_UNDER_50K') not null","exception":""}
{"timestamp":"2025-05-08T11:25:55.159+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consumption_type enum ('BALANCED','CONSERVATIVE','CONSUMPTION_ORIENTED','PRACTICAL')","exception":""}
{"timestamp":"2025-05-08T11:25:55.274+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:25:56.050+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:25:56.082+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:25:56.082+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:25:56.887+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:25:57.768+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:25:57.865+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:25:57.876+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.567 seconds (process running for 10.092)","exception":""}
{"timestamp":"2025-05-08T11:26:19.232+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:26:19.233+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:26:19.237+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 4 ms","exception":""}
{"timestamp":"2025-05-08T11:26:19.419+0900","level":"WARN","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-2","message":"[A000] 필수 입력값이 누락되었습니다. | detail=Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)","exception":""}
{"timestamp":"2025-05-08T11:26:19.449+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)]","exception":""}
{"timestamp":"2025-05-08T11:26:46.682+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-3","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:26:46.950+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-3","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:26:47.034+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-3","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:26:47.039+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-3","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T11:26:47.040+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-3","message":"Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T11:26:47.061+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-3","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T11:26:47.065+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-3","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '1' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:27:03.524+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-2","message":"Init duration for springdoc-openapi is: 567 ms","exception":""}
{"timestamp":"2025-05-08T11:27:13.564+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:27:13.643+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:27:13.657+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:27:13.660+0900","level":"WARN","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-4","message":"SQL Error: 1062, SQLState: 23000","exception":""}
{"timestamp":"2025-05-08T11:27:13.661+0900","level":"ERROR","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread":"http-nio-8080-exec-4","message":"Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'","exception":""}
{"timestamp":"2025-05-08T11:27:13.666+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-4","message":"Unhandled exception occurred","exception":"org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy198.save(Unknown Source)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.savePasskeys(MemberService.java:92)\r\n\tat com.flexrate.flexrate_back.member.application.MemberService.registerMember(MemberService.java:68)\r\n\tat com.flexrate.flexrate_back.member.api.SignUpController.signup(SignUpController.java:43)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\nCaused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]\r\n\tat org.hibernate.dialect.MySQLDialect.lambda$buildSQLExceptionConversionDelegate$3(MySQLDialect.java:1245)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)\r\n\tat org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)\r\n\tat org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)\r\n\tat org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)\r\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)\r\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:682)\r\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:293)\r\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:274)\r\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:324)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:393)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:307)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:223)\r\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:136)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:177)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:95)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:79)\r\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)\r\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\r\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:761)\r\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:745)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\r\n\tat jdk.proxy4/jdk.proxy4.$Proxy193.persist(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:636)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\r\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\r\n\t... 146 common frames omitted\r\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1166)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1101)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1467)\r\n\tat com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1084)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)\r\n\t... 202 common frames omitted\r\n"}
{"timestamp":"2025-05-08T11:27:13.666+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-4","message":"Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Duplicate entry '2' for key 'fido_credential.UKmsct6biuq32sdb2e8icuu4t68'] [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; SQL [insert into fido_credential (device_info,is_active,last_used_date,member_id,public_key,sign_count) values (?,?,?,?,?,?)]; constraint [fido_credential.UKmsct6biuq32sdb2e8icuu4t68]]","exception":""}
{"timestamp":"2025-05-08T11:28:04.316+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 19900 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:28:04.326+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:28:04.328+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:28:04.393+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:28:04.393+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:28:06.007+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:28:06.007+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:28:06.187+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 165 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:28:06.212+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:28:06.212+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:28:06.228+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:28:06.228+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:28:06.228+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:28:06.243+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:28:06.246+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:28:06.246+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:28:07.503+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:28:07.518+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:28:07.518+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:28:07.582+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:28:07.582+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3188 ms","exception":""}
{"timestamp":"2025-05-08T11:28:08.100+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:28:08.102+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:28:08.423+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@53264c18","exception":""}
{"timestamp":"2025-05-08T11:28:08.425+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:28:08.478+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:28:08.589+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.045s)","exception":""}
{"timestamp":"2025-05-08T11:28:08.618+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:28:08.621+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:28:08.753+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:28:08.815+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:28:08.880+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:28:09.211+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:28:09.272+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:28:09.281+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:28:10.438+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:28:10.489+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consume_goal enum ('CLOTHING_UNDER_100K','COMPARE_BEFORE_BUYING','HAS_HOUSING_SAVING','INCOME_OVER_EXPENSE','LIMIT_DAILY_MEAL','MEAL_UNDER_20K','NO_EXPENSIVE_DESSERT','NO_OVER_50K_PER_DAY','NO_SPENDING_TODAY','NO_USELESS_ELECTRONICS','ONE_CATEGORY_SPEND','ONLY_PUBLIC_TRANSPORT','OVER_10_PERCENT','SAVE_70_PERCENT','SMALL_MONTHLY_SAVE','SUBSCRIPTION_UNDER_50K') not null","exception":""}
{"timestamp":"2025-05-08T11:28:10.536+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"restartedMain","message":"\r\n    alter table member \r\n       modify column consumption_type enum ('BALANCED','CONSERVATIVE','CONSUMPTION_ORIENTED','PRACTICAL')","exception":""}
{"timestamp":"2025-05-08T11:28:10.658+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:28:11.498+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:28:11.563+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:28:11.580+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:28:12.479+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:28:13.412+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:28:13.506+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:28:13.527+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.301 seconds (process running for 10.847)","exception":""}
{"timestamp":"2025-05-08T11:28:21.527+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:28:21.527+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:28:21.527+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T11:28:21.849+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:28:22.048+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:28:22.103+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:29:39.778+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 10672 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:29:39.789+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:29:39.790+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:29:39.847+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:29:39.848+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:29:41.452+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:29:41.452+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:29:41.633+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 165 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:29:41.654+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:29:41.657+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:29:41.681+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:29:41.683+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:29:41.684+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:29:41.685+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:29:41.686+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:29:41.687+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:29:42.923+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:29:42.938+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:29:42.939+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:29:43.016+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:29:43.017+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3168 ms","exception":""}
{"timestamp":"2025-05-08T11:29:43.521+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:29:43.537+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:29:43.856+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f1038c3","exception":""}
{"timestamp":"2025-05-08T11:29:43.857+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:29:43.910+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:29:44.019+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.038s)","exception":""}
{"timestamp":"2025-05-08T11:29:44.047+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:29:44.052+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:29:44.196+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:29:44.256+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:29:44.300+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:29:44.637+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:29:44.709+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:29:44.726+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:29:45.981+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:29:46.159+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:29:47.066+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:29:47.116+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:29:47.129+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:29:48.119+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:29:49.188+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:29:49.290+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:29:49.321+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.612 seconds (process running for 11.159)","exception":""}
{"timestamp":"2025-05-08T11:30:02.638+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:30:02.638+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:30:02.638+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T11:30:02.754+0900","level":"WARN","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-1","message":"[A000] 필수 입력값이 누락되었습니다. | detail=Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)","exception":""}
{"timestamp":"2025-05-08T11:30:02.789+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-1","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)]","exception":""}
{"timestamp":"2025-05-08T11:30:05.820+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:30:05.840+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-4","message":"[A001] 이미 가입된 이메일입니다. | path=/api/auth/signup | detail=이미 가입된 이메일입니다.","exception":""}
{"timestamp":"2025-05-08T11:30:05.852+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-4","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 이미 가입된 이메일입니다.]","exception":""}
{"timestamp":"2025-05-08T11:30:35.186+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:30:35.334+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:30:35.373+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:32:18.747+0900","level":"WARN","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-7","message":"[A000] 필수 입력값이 누락되었습니다. | detail=Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)","exception":""}
{"timestamp":"2025-05-08T11:32:18.747+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)]","exception":""}
{"timestamp":"2025-05-08T11:32:21.565+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-10","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T11:32:41.232+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-2","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T11:32:53.444+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 19664 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:32:53.444+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:32:53.458+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:32:53.514+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:32:53.514+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:32:55.109+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:32:55.109+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:32:55.276+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 162 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:32:55.293+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:32:55.293+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:32:55.326+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:32:55.329+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:32:55.329+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:32:55.329+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:32:55.329+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:32:55.329+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:32:56.513+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:32:56.530+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:32:56.530+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:32:56.587+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:32:56.602+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3073 ms","exception":""}
{"timestamp":"2025-05-08T11:32:57.094+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:32:57.096+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:32:57.392+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@101075b2","exception":""}
{"timestamp":"2025-05-08T11:32:57.394+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:32:57.440+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:32:57.550+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.040s)","exception":""}
{"timestamp":"2025-05-08T11:32:57.580+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:32:57.587+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:32:57.715+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:32:57.764+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:32:57.796+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:32:58.131+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:32:58.198+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:32:58.211+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:32:59.279+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:32:59.424+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:33:00.193+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:33:00.240+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:33:00.240+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:33:01.077+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:33:01.961+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:33:02.061+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:33:02.076+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.717 seconds (process running for 10.261)","exception":""}
{"timestamp":"2025-05-08T11:33:12.710+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:33:12.710+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:33:12.710+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T11:33:12.858+0900","level":"WARN","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-1","message":"[A000] 필수 입력값이 누락되었습니다. | detail=Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)","exception":""}
{"timestamp":"2025-05-08T11:33:12.874+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-1","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO)]","exception":""}
{"timestamp":"2025-05-08T11:33:14.593+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-5","message":"Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.flexrate.flexrate_back.member.dto.SignupResponseDTO> com.flexrate.flexrate_back.member.api.SignUpController.signup(com.flexrate.flexrate_back.member.dto.SignupRequestDTO) with 2 errors: [Field error in object 'signupRequestDTO' on field 'consumeGoal': rejected value [null]; codes [NotNull.signupRequestDTO.consumeGoal,NotNull.consumeGoal,NotNull.com.flexrate.flexrate_back.member.enums.ConsumeGoal,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumeGoal,consumeGoal]; arguments []; default message [consumeGoal]]; default message [소비 목표는 필수 항목입니다.]] [Field error in object 'signupRequestDTO' on field 'consumptionType': rejected value [null]; codes [NotNull.signupRequestDTO.consumptionType,NotNull.consumptionType,NotNull.com.flexrate.flexrate_back.member.enums.ConsumptionType,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequestDTO.consumptionType,consumptionType]; arguments []; default message [consumptionType]]; default message [소비성향은 필수 항목입니다.]] ]","exception":""}
{"timestamp":"2025-05-08T11:33:53.633+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 21568 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T11:33:53.649+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T11:33:53.649+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T11:33:53.712+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T11:33:53.712+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T11:33:55.295+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:33:55.295+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:33:55.499+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 180 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:33:55.514+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T11:33:55.514+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T11:33:55.530+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:33:55.530+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:33:55.530+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:33:55.530+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:33:55.546+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T11:33:55.546+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T11:33:56.778+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T11:33:56.794+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T11:33:56.794+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T11:33:56.858+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T11:33:56.858+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3146 ms","exception":""}
{"timestamp":"2025-05-08T11:33:57.330+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T11:33:57.330+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T11:33:57.633+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@223a26ba","exception":""}
{"timestamp":"2025-05-08T11:33:57.635+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T11:33:57.693+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T11:33:57.811+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T11:33:57.841+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T11:33:57.847+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T11:33:57.971+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T11:33:58.045+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T11:33:58.103+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T11:33:58.394+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T11:33:58.472+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T11:33:58.488+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T11:33:59.559+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T11:33:59.702+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T11:34:00.507+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T11:34:00.555+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T11:34:00.555+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T11:34:01.390+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T11:34:02.331+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T11:34:02.439+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T11:34:02.459+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.91 seconds (process running for 10.46)","exception":""}
{"timestamp":"2025-05-08T11:34:18.720+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:34:18.721+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T11:34:18.724+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 2 ms","exception":""}
{"timestamp":"2025-05-08T11:34:19.088+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T11:34:19.288+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:34:19.345+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T11:54:49.980+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-1","message":"Init duration for springdoc-openapi is: 590 ms","exception":""}
{"timestamp":"2025-05-08T12:34:24.208+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 11432 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T12:34:24.219+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T12:34:24.220+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T12:34:24.312+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T12:34:24.313+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T12:34:25.908+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T12:34:25.908+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T12:34:26.098+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 182 ms. Found 5 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T12:34:26.114+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T12:34:26.130+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T12:34:26.154+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T12:34:26.154+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T12:34:26.154+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T12:34:26.161+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T12:34:26.162+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T12:34:26.162+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T12:34:27.531+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T12:34:27.547+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T12:34:27.547+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T12:34:27.631+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T12:34:27.631+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3318 ms","exception":""}
{"timestamp":"2025-05-08T12:34:28.141+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T12:34:28.141+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T12:34:28.450+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@40259601","exception":""}
{"timestamp":"2025-05-08T12:34:28.452+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T12:34:28.514+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T12:34:28.637+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.046s)","exception":""}
{"timestamp":"2025-05-08T12:34:28.666+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T12:34:28.672+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T12:34:28.817+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T12:34:28.881+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T12:34:28.920+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T12:34:29.230+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T12:34:29.296+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T12:34:29.304+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T12:34:30.474+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T12:34:30.625+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T12:34:31.479+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T12:34:31.521+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T12:34:31.521+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T12:34:32.458+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T12:34:33.468+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T12:34:33.564+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T12:34:33.580+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.499 seconds (process running for 11.047)","exception":""}
{"timestamp":"2025-05-08T12:34:44.308+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T12:34:44.308+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T12:34:44.310+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 1 ms","exception":""}
{"timestamp":"2025-05-08T12:34:45.276+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 588 ms","exception":""}
{"timestamp":"2025-05-08T12:36:15.832+0900","level":"WARN","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-4","message":"[A000] 필수 입력값이 누락되었습니다. | detail=JSON parse error: Cannot deserialize value of type `com.flexrate.flexrate_back.auth.enums.AuthMethod` from String \"string\": not one of the values accepted for Enum class: [MFA, FIDO]","exception":""}
{"timestamp":"2025-05-08T12:36:15.832+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-4","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.flexrate.flexrate_back.auth.enums.AuthMethod` from String \"string\": not one of the values accepted for Enum class: [MFA, FIDO]]","exception":""}
{"timestamp":"2025-05-08T12:37:22.295+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T12:37:22.327+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T12:37:22.447+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-6","message":"Unhandled exception occurred","exception":"io.jsonwebtoken.io.DecodingException: Illegal base64 character: '_'\r\n\tat io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)\r\n\tat io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)\r\n\tat io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)\r\n\tat io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)\r\n\tat io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)\r\n\tat io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:132)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.JwtTokenProvider.makeToken(JwtTokenProvider.java:45)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.JwtTokenProvider.generateToken(JwtTokenProvider.java:26)\r\n\tat com.flexrate.flexrate_back.member.application.LoginService.login(LoginService.java:45)\r\n\tat com.flexrate.flexrate_back.member.api.LoginController.login(LoginController.java:26)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"timestamp":"2025-05-08T12:37:22.447+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-6","message":"Resolved [io.jsonwebtoken.io.DecodingException: Illegal base64 character: '_']","exception":""}
{"timestamp":"2025-05-08T13:33:53.536+0900","level":"WARN","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"HikariPool-1 housekeeper","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45m54s767ms662µs500ns).","exception":""}
{"timestamp":"2025-05-08T14:00:35.186+0900","level":"WARN","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"HikariPool-1 housekeeper","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m11s322ms303µs300ns).","exception":""}
{"timestamp":"2025-05-08T14:11:20.433+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 15916 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T14:11:20.444+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T14:11:20.445+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T14:11:20.500+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T14:11:20.500+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T14:11:22.085+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T14:11:22.085+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T14:11:22.259+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 164 ms. Found 6 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T14:11:22.274+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T14:11:22.274+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T14:11:22.289+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:11:22.289+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:11:22.305+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:11:22.305+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:11:22.305+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:11:22.305+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:11:22.305+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T14:11:23.493+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T14:11:23.503+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T14:11:23.503+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T14:11:23.583+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T14:11:23.583+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3083 ms","exception":""}
{"timestamp":"2025-05-08T14:11:24.041+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T14:11:24.041+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T14:11:24.359+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c87ee4a","exception":""}
{"timestamp":"2025-05-08T14:11:24.361+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T14:11:24.428+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T14:11:24.569+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.052s)","exception":""}
{"timestamp":"2025-05-08T14:11:24.599+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T14:11:24.602+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T14:11:24.712+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T14:11:24.782+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T14:11:24.822+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T14:11:25.138+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T14:11:25.219+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T14:11:25.233+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T14:11:26.324+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T14:11:26.487+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T14:11:27.257+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T14:11:27.299+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T14:11:27.299+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T14:11:28.140+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T14:11:28.971+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T14:11:29.071+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T14:11:29.082+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.706 seconds (process running for 10.29)","exception":""}
{"timestamp":"2025-05-08T14:12:34.482+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T14:12:34.494+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T14:12:34.495+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T14:12:35.470+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 620 ms","exception":""}
{"timestamp":"2025-05-08T14:23:55.120+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T14:23:55.155+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-4","message":"[U001] 사용자를 찾을 수 없습니다 | path=/api/auth/login | detail=사용자를 찾을 수 없습니다","exception":""}
{"timestamp":"2025-05-08T14:23:55.155+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-4","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 사용자를 찾을 수 없습니다]","exception":""}
{"timestamp":"2025-05-08T14:24:42.024+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T14:24:42.059+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T14:24:42.151+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-7","message":"Unhandled exception occurred","exception":"io.jsonwebtoken.security.WeakKeyException: The signing key's size is 144 bits which is not secure enough for the HS256 algorithm.  The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with HS256 MUST have a size >= 256 bits (the key size must be greater than or equal to the hash output size).  Consider using the io.jsonwebtoken.security.Keys class's 'secretKeyFor(SignatureAlgorithm.HS256)' method to create a key guaranteed to be secure enough for HS256.  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.\r\n\tat io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:387)\r\n\tat io.jsonwebtoken.SignatureAlgorithm.assertValidSigningKey(SignatureAlgorithm.java:315)\r\n\tat io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:112)\r\n\tat io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:125)\r\n\tat io.jsonwebtoken.impl.DefaultJwtBuilder.signWith(DefaultJwtBuilder.java:133)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.JwtTokenProvider.makeToken(JwtTokenProvider.java:45)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.JwtTokenProvider.generateToken(JwtTokenProvider.java:26)\r\n\tat com.flexrate.flexrate_back.member.application.LoginService.login(LoginService.java:53)\r\n\tat com.flexrate.flexrate_back.member.api.LoginController.login(LoginController.java:26)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"timestamp":"2025-05-08T14:24:42.151+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [io.jsonwebtoken.security.WeakKeyException: The signing key's size is 144 bits which is not secure enough for the HS256 algorithm.  The JWT JWA Specification (RFC 7518, Section 3.2) states that keys used with HS256 MUST have a size >= 256 bits (the key size must be greater than or equal to the hash output size).  Consider using the io.jsonwebtoken.security.Keys class's 'secretKeyFor(SignatureAlgorithm.HS256)' method to create a key guaranteed to be secure enough for HS256.  See https://tools.ietf.org/html/rfc7518#section-3.2 for more information.]","exception":""}
{"timestamp":"2025-05-08T14:41:36.989+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 11632 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T14:41:36.991+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T14:41:36.991+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T14:41:37.056+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T14:41:37.056+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T14:41:38.646+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T14:41:38.658+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T14:41:38.831+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 166 ms. Found 6 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T14:41:38.853+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T14:41:38.856+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T14:41:38.874+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T14:41:40.147+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T14:41:40.170+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T14:41:40.171+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T14:41:40.249+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T14:41:40.249+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3192 ms","exception":""}
{"timestamp":"2025-05-08T14:41:40.718+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T14:41:40.718+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T14:41:41.010+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22326449","exception":""}
{"timestamp":"2025-05-08T14:41:41.010+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T14:41:41.056+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T14:41:41.169+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.043s)","exception":""}
{"timestamp":"2025-05-08T14:41:41.197+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T14:41:41.204+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T14:41:41.327+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T14:41:41.376+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T14:41:41.423+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T14:41:41.725+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T14:41:41.782+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T14:41:41.792+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T14:41:42.909+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T14:41:43.070+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T14:41:44.037+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T14:41:44.072+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T14:41:44.088+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T14:41:45.108+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T14:41:46.267+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T14:41:46.365+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T14:41:46.387+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.459 seconds (process running for 11.033)","exception":""}
{"timestamp":"2025-05-08T14:42:09.757+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T14:42:09.757+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T14:42:09.757+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T14:42:10.687+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-8","message":"Init duration for springdoc-openapi is: 562 ms","exception":""}
{"timestamp":"2025-05-08T14:42:59.539+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T14:42:59.568+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T14:42:59.688+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    select\r\n        fc1_0.credential_id,\r\n        fc1_0.device_info,\r\n        fc1_0.is_active,\r\n        fc1_0.last_used_date,\r\n        fc1_0.member_id,\r\n        fc1_0.public_key,\r\n        fc1_0.sign_count \r\n    from\r\n        fido_credential fc1_0 \r\n    left join\r\n        member m1_0 \r\n            on m1_0.member_id=fc1_0.member_id \r\n    where\r\n        m1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T14:44:34.362+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T14:44:34.375+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-4","message":"[U001] 사용자를 찾을 수 없습니다 | path=/api/auth/login | detail=사용자를 찾을 수 없습니다","exception":""}
{"timestamp":"2025-05-08T14:44:34.379+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-4","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 사용자를 찾을 수 없습니다]","exception":""}
{"timestamp":"2025-05-08T14:44:34.864+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T14:44:34.871+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-7","message":"[U001] 사용자를 찾을 수 없습니다 | path=/api/auth/login | detail=사용자를 찾을 수 없습니다","exception":""}
{"timestamp":"2025-05-08T14:44:34.872+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-7","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 사용자를 찾을 수 없습니다]","exception":""}
{"timestamp":"2025-05-08T15:28:08.604+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 17168 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T15:28:08.617+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T15:28:08.618+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T15:28:08.676+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T15:28:08.677+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T15:28:10.336+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:28:10.336+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:28:10.526+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 183 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:28:10.543+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:28:10.557+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:28:10.589+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.590+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.591+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.591+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.592+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.593+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.595+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:28:10.595+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:28:11.844+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T15:28:11.857+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T15:28:11.857+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T15:28:11.922+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T15:28:11.922+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3244 ms","exception":""}
{"timestamp":"2025-05-08T15:28:12.505+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T15:28:12.505+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T15:28:12.822+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41132d89","exception":""}
{"timestamp":"2025-05-08T15:28:12.824+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T15:28:12.884+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T15:28:13.003+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.046s)","exception":""}
{"timestamp":"2025-05-08T15:28:13.036+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T15:28:13.041+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T15:28:13.166+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T15:28:13.222+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T15:28:13.270+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T15:28:13.661+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T15:28:13.723+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T15:28:13.728+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T15:28:14.938+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T15:28:15.129+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T15:28:16.121+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T15:28:16.175+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T15:28:16.187+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T15:28:17.245+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T15:28:18.337+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T15:28:18.466+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T15:28:18.484+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 11.009 seconds (process running for 11.598)","exception":""}
{"timestamp":"2025-05-08T15:28:27.856+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:28:27.856+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:28:27.856+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T15:28:28.961+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 717 ms","exception":""}
{"timestamp":"2025-05-08T15:29:34.192+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:29:34.236+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:29:34.377+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        lt1_0.transaction_id,\r\n        lt1_0.amount,\r\n        lt1_0.application_id,\r\n        a1_0.application_id,\r\n        a1_0.applied_at,\r\n        a1_0.credit_score,\r\n        a1_0.end_date,\r\n        a1_0.executed_at,\r\n        a1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        a1_0.rate,\r\n        a1_0.remain_amount,\r\n        a1_0.start_date,\r\n        a1_0.status,\r\n        a1_0.total_amount,\r\n        lt1_0.member_id,\r\n        m2_0.member_id,\r\n        m2_0.birth_date,\r\n        m2_0.consume_goal,\r\n        m2_0.consumption_type,\r\n        m2_0.created_at,\r\n        m2_0.email,\r\n        m2_0.last_login_at,\r\n        m2_0.last_login_method,\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        la1_0.product_id,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount,\r\n        m2_0.name,\r\n        m2_0.password_hash,\r\n        m2_0.password_last_changed_at,\r\n        m2_0.phone,\r\n        m2_0.role,\r\n        m2_0.sex,\r\n        m2_0.status,\r\n        m2_0.updated_at,\r\n        lt1_0.occurred_at,\r\n        lt1_0.status,\r\n        lt1_0.type \r\n    from\r\n        loan_transaction lt1_0 \r\n    join\r\n        loan_application a1_0 \r\n            on a1_0.application_id=lt1_0.application_id \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=a1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=a1_0.product_id \r\n    join\r\n        member m2_0 \r\n            on m2_0.member_id=lt1_0.member_id \r\n    left join\r\n        loan_application la1_0 \r\n            on m2_0.member_id=la1_0.member_id \r\n    where\r\n        lt1_0.transaction_id=?","exception":""}
{"timestamp":"2025-05-08T15:29:34.397+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-4","message":"[V001] 유효성 검사 오류 | path=/api/auth/login | detail=유효성 검사 오류","exception":""}
{"timestamp":"2025-05-08T15:29:34.403+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-4","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 유효성 검사 오류]","exception":""}
{"timestamp":"2025-05-08T15:29:41.390+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:29:41.403+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:29:41.482+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-6","message":"\r\n    select\r\n        lt1_0.transaction_id,\r\n        lt1_0.amount,\r\n        lt1_0.application_id,\r\n        a1_0.application_id,\r\n        a1_0.applied_at,\r\n        a1_0.credit_score,\r\n        a1_0.end_date,\r\n        a1_0.executed_at,\r\n        a1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        a1_0.rate,\r\n        a1_0.remain_amount,\r\n        a1_0.start_date,\r\n        a1_0.status,\r\n        a1_0.total_amount,\r\n        lt1_0.member_id,\r\n        m2_0.member_id,\r\n        m2_0.birth_date,\r\n        m2_0.consume_goal,\r\n        m2_0.consumption_type,\r\n        m2_0.created_at,\r\n        m2_0.email,\r\n        m2_0.last_login_at,\r\n        m2_0.last_login_method,\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        la1_0.product_id,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount,\r\n        m2_0.name,\r\n        m2_0.password_hash,\r\n        m2_0.password_last_changed_at,\r\n        m2_0.phone,\r\n        m2_0.role,\r\n        m2_0.sex,\r\n        m2_0.status,\r\n        m2_0.updated_at,\r\n        lt1_0.occurred_at,\r\n        lt1_0.status,\r\n        lt1_0.type \r\n    from\r\n        loan_transaction lt1_0 \r\n    join\r\n        loan_application a1_0 \r\n            on a1_0.application_id=lt1_0.application_id \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=a1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=a1_0.product_id \r\n    join\r\n        member m2_0 \r\n            on m2_0.member_id=lt1_0.member_id \r\n    left join\r\n        loan_application la1_0 \r\n            on m2_0.member_id=la1_0.member_id \r\n    where\r\n        lt1_0.transaction_id=?","exception":""}
{"timestamp":"2025-05-08T15:29:41.492+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-6","message":"[V001] 유효성 검사 오류 | path=/api/auth/login | detail=유효성 검사 오류","exception":""}
{"timestamp":"2025-05-08T15:29:41.494+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-6","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 유효성 검사 오류]","exception":""}
{"timestamp":"2025-05-08T15:32:00.489+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 17264 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T15:32:00.489+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T15:32:00.489+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T15:32:00.557+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T15:32:00.557+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T15:32:02.126+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:32:02.126+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:32:02.295+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 167 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:32:02.326+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:32:02.326+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:32:02.358+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:32:03.698+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T15:32:03.713+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T15:32:03.713+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T15:32:03.792+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T15:32:03.792+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3235 ms","exception":""}
{"timestamp":"2025-05-08T15:32:04.377+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T15:32:04.377+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T15:32:04.697+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1f86b3e5","exception":""}
{"timestamp":"2025-05-08T15:32:04.700+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T15:32:04.767+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T15:32:04.884+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T15:32:04.909+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T15:32:04.913+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T15:32:05.047+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T15:32:05.110+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T15:32:05.164+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T15:32:05.474+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T15:32:05.545+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T15:32:05.559+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T15:32:06.862+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T15:32:07.024+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T15:32:07.811+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T15:32:07.842+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T15:32:07.858+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T15:32:08.714+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T15:32:09.628+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T15:32:09.734+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T15:32:09.754+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.346 seconds (process running for 10.88)","exception":""}
{"timestamp":"2025-05-08T15:32:20.574+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:32:20.574+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:32:20.574+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T15:32:21.608+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 598 ms","exception":""}
{"timestamp":"2025-05-08T15:34:46.332+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 10920 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T15:34:46.349+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T15:34:46.353+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T15:34:46.422+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T15:34:46.422+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T15:34:48.050+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:34:48.050+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:34:48.233+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 174 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:34:48.249+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:34:48.264+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:34:48.290+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.292+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.292+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.293+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.293+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.295+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.295+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:34:48.296+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:34:49.550+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T15:34:49.563+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T15:34:49.564+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T15:34:49.633+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T15:34:49.634+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3211 ms","exception":""}
{"timestamp":"2025-05-08T15:34:50.149+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T15:34:50.151+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T15:34:50.497+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1764b3e4","exception":""}
{"timestamp":"2025-05-08T15:34:50.499+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T15:34:50.562+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T15:34:50.694+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.045s)","exception":""}
{"timestamp":"2025-05-08T15:34:50.725+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T15:34:50.730+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T15:34:50.879+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T15:34:50.929+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T15:34:50.960+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T15:34:51.310+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T15:34:51.397+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T15:34:51.417+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T15:34:52.763+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T15:34:52.943+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T15:34:53.970+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T15:34:54.019+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T15:34:54.033+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T15:34:55.233+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T15:34:56.302+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T15:34:56.415+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T15:34:56.430+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 11.199 seconds (process running for 11.774)","exception":""}
{"timestamp":"2025-05-08T15:35:02.683+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-2","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:35:02.683+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:35:02.683+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-2","message":"Completed initialization in 0 ms","exception":""}
{"timestamp":"2025-05-08T15:35:03.697+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-7","message":"Init duration for springdoc-openapi is: 630 ms","exception":""}
{"timestamp":"2025-05-08T15:35:26.884+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:35:26.913+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:35:27.030+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-10","message":"Unhandled exception occurred","exception":"java.time.format.DateTimeParseException: Text 'string' could not be parsed at index 0\r\n\tat java.base/java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2052)\r\n\tat java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1954)\r\n\tat java.base/java.time.LocalDateTime.parse(LocalDateTime.java:494)\r\n\tat java.base/java.time.LocalDateTime.parse(LocalDateTime.java:479)\r\n\tat com.flexrate.flexrate_back.member.application.LoginService.createMfaLog(LoginService.java:84)\r\n\tat com.flexrate.flexrate_back.member.application.LoginService.login(LoginService.java:51)\r\n\tat com.flexrate.flexrate_back.member.api.LoginController.login(LoginController.java:26)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)\r\n\tat org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)\r\n\tat org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)\r\n\tat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat com.flexrate.flexrate_back.auth.domain.jwt.TokenAuthenticationFilter.doFilterInternal(TokenAuthenticationFilter.java:35)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)\r\n\tat org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)\r\n\tat org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)\r\n\tat org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)\r\n\tat org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)\r\n\tat org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:840)\r\n"}
{"timestamp":"2025-05-08T15:35:27.049+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-10","message":"Resolved [java.time.format.DateTimeParseException: Text 'string' could not be parsed at index 0]","exception":""}
{"timestamp":"2025-05-08T15:36:28.945+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:36:28.960+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:36:29.048+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T15:36:29.110+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        fc1_0.credential_id,\r\n        fc1_0.device_info,\r\n        fc1_0.is_active,\r\n        fc1_0.last_used_date,\r\n        fc1_0.member_id,\r\n        fc1_0.public_key,\r\n        fc1_0.sign_count \r\n    from\r\n        fido_credential fc1_0 \r\n    left join\r\n        member m1_0 \r\n            on m1_0.member_id=fc1_0.member_id \r\n    where\r\n        m1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:48:51.226+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 20132 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T15:48:51.236+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T15:48:51.237+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T15:48:51.292+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T15:48:51.293+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T15:48:52.926+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:48:52.928+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:48:53.112+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 170 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:48:53.132+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:48:53.136+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:48:53.163+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.165+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.166+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.167+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.167+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.169+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.170+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:48:53.170+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:48:54.462+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T15:48:54.480+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T15:48:54.481+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T15:48:54.561+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T15:48:54.562+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3267 ms","exception":""}
{"timestamp":"2025-05-08T15:48:55.082+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T15:48:55.083+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T15:48:55.394+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@139eb103","exception":""}
{"timestamp":"2025-05-08T15:48:55.396+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T15:48:55.455+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T15:48:55.567+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T15:48:55.596+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T15:48:55.601+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T15:48:55.740+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T15:48:55.799+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T15:48:55.845+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T15:48:56.152+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T15:48:56.206+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T15:48:56.219+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T15:48:57.320+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T15:48:57.470+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T15:48:58.250+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T15:48:58.286+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T15:48:58.297+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T15:48:59.148+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T15:49:00.161+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T15:49:00.273+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T15:49:00.294+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.143 seconds (process running for 10.685)","exception":""}
{"timestamp":"2025-05-08T15:49:24.644+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:49:24.644+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:49:24.648+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 3 ms","exception":""}
{"timestamp":"2025-05-08T15:49:24.966+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:49:25.026+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:49:25.197+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T15:49:25.279+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        fc1_0.credential_id,\r\n        fc1_0.device_info,\r\n        fc1_0.is_active,\r\n        fc1_0.last_used_date,\r\n        fc1_0.member_id,\r\n        fc1_0.public_key,\r\n        fc1_0.sign_count \r\n    from\r\n        fido_credential fc1_0 \r\n    left join\r\n        member m1_0 \r\n            on m1_0.member_id=fc1_0.member_id \r\n    where\r\n        m1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:55:51.281+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 17624 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T15:55:51.290+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T15:55:51.291+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T15:55:51.344+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T15:55:51.345+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T15:55:52.922+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:55:52.924+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:55:53.112+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 178 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:55:53.131+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T15:55:53.134+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T15:55:53.159+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.160+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.161+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.161+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.162+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.163+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.163+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T15:55:53.164+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T15:55:54.344+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T15:55:54.363+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T15:55:54.363+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T15:55:54.440+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T15:55:54.440+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3094 ms","exception":""}
{"timestamp":"2025-05-08T15:55:54.952+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T15:55:54.953+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T15:55:55.311+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@702371cd","exception":""}
{"timestamp":"2025-05-08T15:55:55.319+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T15:55:55.369+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T15:55:55.479+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.040s)","exception":""}
{"timestamp":"2025-05-08T15:55:55.504+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T15:55:55.510+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T15:55:55.641+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T15:55:55.693+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T15:55:55.736+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T15:55:56.089+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T15:55:56.149+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T15:55:56.163+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T15:55:57.362+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T15:55:57.506+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T15:55:58.257+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T15:55:58.295+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T15:55:58.304+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T15:55:59.140+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T15:55:59.984+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T15:56:00.093+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T15:56:00.110+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 9.883 seconds (process running for 10.412)","exception":""}
{"timestamp":"2025-05-08T15:56:38.783+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:56:38.784+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T15:56:38.788+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 4 ms","exception":""}
{"timestamp":"2025-05-08T15:56:39.136+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:56:39.186+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:56:39.367+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T15:56:39.452+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-1","message":"\r\n    select\r\n        fc1_0.credential_id,\r\n        fc1_0.device_info,\r\n        fc1_0.is_active,\r\n        fc1_0.last_used_date,\r\n        fc1_0.member_id,\r\n        fc1_0.public_key,\r\n        fc1_0.sign_count \r\n    from\r\n        fido_credential fc1_0 \r\n    left join\r\n        member m1_0 \r\n            on m1_0.member_id=fc1_0.member_id \r\n    where\r\n        m1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:57:59.204+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T15:57:59.210+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T15:57:59.289+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T15:57:59.303+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-5","message":"\r\n    select\r\n        fc1_0.credential_id,\r\n        fc1_0.device_info,\r\n        fc1_0.is_active,\r\n        fc1_0.last_used_date,\r\n        fc1_0.member_id,\r\n        fc1_0.public_key,\r\n        fc1_0.sign_count \r\n    from\r\n        fido_credential fc1_0 \r\n    left join\r\n        member m1_0 \r\n            on m1_0.member_id=fc1_0.member_id \r\n    where\r\n        m1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T16:10:27.840+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T16:10:27.958+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:10:27.973+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-7","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:24:17.044+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 3228 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T16:24:17.055+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T16:24:17.056+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T16:24:17.114+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T16:24:17.115+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T16:24:18.994+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:24:18.997+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:24:19.208+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 198 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:24:19.231+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:24:19.234+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:24:19.261+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.263+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.264+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.265+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.266+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.268+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.269+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:24:19.269+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:24:20.513+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T16:24:20.537+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:24:20.538+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T16:24:20.610+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T16:24:20.611+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3495 ms","exception":""}
{"timestamp":"2025-05-08T16:24:21.136+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T16:24:21.138+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T16:24:21.440+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8a4ae9b","exception":""}
{"timestamp":"2025-05-08T16:24:21.443+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T16:24:21.509+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T16:24:21.624+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.041s)","exception":""}
{"timestamp":"2025-05-08T16:24:21.653+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T16:24:21.658+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T16:24:21.797+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T16:24:21.860+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T16:24:21.897+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T16:24:22.216+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T16:24:22.297+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T16:24:22.317+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T16:24:23.564+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T16:24:23.734+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:24:24.313+0900","level":"WARN","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread":"restartedMain","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loanAdminController' defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\api\\LoanAdminController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'loanAdminService' defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\application\\LoanAdminService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.flexrate.flexrate_back.loan.application.repository.LoanTransactionQueryRepository' available: expected single matching bean but found 2: loanTransactionQueryRepositoryImpl,loanTransactionRepository","exception":""}
{"timestamp":"2025-05-08T16:24:24.314+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:24:24.319+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Shutdown initiated...","exception":""}
{"timestamp":"2025-05-08T16:24:24.330+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Shutdown completed.","exception":""}
{"timestamp":"2025-05-08T16:24:24.336+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Stopping service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:24:24.358+0900","level":"INFO","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread":"restartedMain","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","exception":""}
{"timestamp":"2025-05-08T16:24:24.391+0900","level":"ERROR","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread":"restartedMain","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nParameter 0 of constructor in com.flexrate.flexrate_back.loan.application.LoanAdminService required a single bean, but 2 were found:\r\n\t- loanTransactionQueryRepositoryImpl: defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\application\\repository\\LoanTransactionQueryRepositoryImpl.class]\r\n\t- loanTransactionRepository: defined in com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration\r\n\r\nThis may be due to missing parameter name information\r\n\r\nAction:\r\n\r\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\r\n\r\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)\n\r\n","exception":""}
{"timestamp":"2025-05-08T16:25:39.261+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 12740 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T16:25:39.274+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T16:25:39.276+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T16:25:39.338+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T16:25:39.338+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T16:25:40.955+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:25:40.957+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:25:41.149+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 184 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:25:41.170+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:25:41.172+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:25:41.196+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.198+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.200+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.201+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.201+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.203+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.204+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:25:41.204+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:25:42.445+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T16:25:42.461+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:25:42.461+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T16:25:42.531+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T16:25:42.533+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3194 ms","exception":""}
{"timestamp":"2025-05-08T16:25:43.042+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T16:25:43.043+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T16:25:43.356+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2edb3831","exception":""}
{"timestamp":"2025-05-08T16:25:43.358+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T16:25:43.411+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T16:25:43.525+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.045s)","exception":""}
{"timestamp":"2025-05-08T16:25:43.556+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T16:25:43.560+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T16:25:43.701+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T16:25:43.757+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T16:25:43.809+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T16:25:44.130+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T16:25:44.192+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T16:25:44.208+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T16:25:45.407+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T16:25:45.562+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:25:46.104+0900","level":"WARN","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread":"restartedMain","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loanAdminController' defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\api\\LoanAdminController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'loanAdminService' defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\application\\LoanAdminService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.flexrate.flexrate_back.loan.application.repository.LoanTransactionQueryRepository' available: expected single matching bean but found 2: loanTransactionQueryRepositoryImpl,loanTransactionRepository","exception":""}
{"timestamp":"2025-05-08T16:25:46.105+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:25:46.110+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Shutdown initiated...","exception":""}
{"timestamp":"2025-05-08T16:25:46.121+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Shutdown completed.","exception":""}
{"timestamp":"2025-05-08T16:25:46.125+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Stopping service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:25:46.146+0900","level":"INFO","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread":"restartedMain","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","exception":""}
{"timestamp":"2025-05-08T16:25:46.169+0900","level":"ERROR","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread":"restartedMain","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nParameter 0 of constructor in com.flexrate.flexrate_back.loan.application.LoanAdminService required a single bean, but 2 were found:\r\n\t- loanTransactionQueryRepositoryImpl: defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\application\\repository\\LoanTransactionQueryRepositoryImpl.class]\r\n\t- loanTransactionRepository: defined in com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration\r\n\r\nThis may be due to missing parameter name information\r\n\r\nAction:\r\n\r\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\r\n\r\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)\n\r\n","exception":""}
{"timestamp":"2025-05-08T16:28:32.438+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 5712 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T16:28:32.451+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T16:28:32.452+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T16:28:32.521+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T16:28:32.523+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T16:28:34.130+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:28:34.132+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:28:34.315+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 172 ms. Found 7 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:28:34.337+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:28:34.340+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:28:34.366+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.368+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.369+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.370+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.371+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.372+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.373+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:28:34.373+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:28:35.587+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T16:28:35.601+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:28:35.602+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T16:28:35.676+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T16:28:35.677+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3149 ms","exception":""}
{"timestamp":"2025-05-08T16:28:36.166+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T16:28:36.168+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T16:28:36.484+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13c0acc","exception":""}
{"timestamp":"2025-05-08T16:28:36.488+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T16:28:36.541+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T16:28:36.656+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.043s)","exception":""}
{"timestamp":"2025-05-08T16:28:36.685+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T16:28:36.691+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T16:28:36.829+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T16:28:36.889+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T16:28:36.939+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T16:28:37.254+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T16:28:37.321+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T16:28:37.338+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T16:28:38.489+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T16:28:38.636+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:28:39.128+0900","level":"WARN","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread":"restartedMain","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loanAdminController' defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\api\\LoanAdminController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'loanAdminService' defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\application\\LoanAdminService.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.flexrate.flexrate_back.loan.application.repository.LoanTransactionQueryRepository' available: expected single matching bean but found 2: loanTransactionQueryRepositoryImpl,loanTransactionRepository","exception":""}
{"timestamp":"2025-05-08T16:28:39.129+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:28:39.136+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Shutdown initiated...","exception":""}
{"timestamp":"2025-05-08T16:28:39.147+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Shutdown completed.","exception":""}
{"timestamp":"2025-05-08T16:28:39.152+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Stopping service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:28:39.174+0900","level":"INFO","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread":"restartedMain","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","exception":""}
{"timestamp":"2025-05-08T16:28:39.199+0900","level":"ERROR","logger":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread":"restartedMain","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nParameter 0 of constructor in com.flexrate.flexrate_back.loan.application.LoanAdminService required a single bean, but 2 were found:\r\n\t- loanTransactionQueryRepositoryImpl: defined in file [C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main\\com\\flexrate\\flexrate_back\\loan\\application\\repository\\LoanTransactionQueryRepositoryImpl.class]\r\n\t- loanTransactionRepository: defined in com.flexrate.flexrate_back.member.domain.repository.LoanTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration\r\n\r\nThis may be due to missing parameter name information\r\n\r\nAction:\r\n\r\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\r\n\r\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)\n\r\n","exception":""}
{"timestamp":"2025-05-08T16:29:42.412+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Starting FlexrateBackApplication using Java 17.0.14 with PID 19872 (C:\\woori-workspace\\flexrate\\flexrate-back\\build\\classes\\java\\main started by 3-34 in C:\\woori-workspace\\flexrate\\flexrate-back)","exception":""}
{"timestamp":"2025-05-08T16:29:42.421+0900","level":"DEBUG","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Running with Spring Boot v3.4.4, Spring v6.2.5","exception":""}
{"timestamp":"2025-05-08T16:29:42.422+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"The following 1 profile is active: \"dev\"","exception":""}
{"timestamp":"2025-05-08T16:29:42.482+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","exception":""}
{"timestamp":"2025-05-08T16:29:42.484+0900","level":"INFO","logger":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","exception":""}
{"timestamp":"2025-05-08T16:29:44.197+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:29:44.199+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:29:44.413+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 200 ms. Found 6 JPA repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:29:44.432+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Multiple Spring Data modules found, entering strict repository configuration mode","exception":""}
{"timestamp":"2025-05-08T16:29:44.434+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","exception":""}
{"timestamp":"2025-05-08T16:29:44.458+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.auth.domain.repository.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:29:44.459+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:29:44.460+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.loan.application.repository.LoanProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:29:44.460+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.FidoCredentialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:29:44.462+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:29:44.462+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread":"restartedMain","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.flexrate.flexrate_back.member.domain.repository.MfaLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","exception":""}
{"timestamp":"2025-05-08T16:29:44.463+0900","level":"INFO","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread":"restartedMain","message":"Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.","exception":""}
{"timestamp":"2025-05-08T16:29:45.723+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat initialized with port 8080 (http)","exception":""}
{"timestamp":"2025-05-08T16:29:45.739+0900","level":"INFO","logger":"org.apache.catalina.core.StandardService","thread":"restartedMain","message":"Starting service [Tomcat]","exception":""}
{"timestamp":"2025-05-08T16:29:45.740+0900","level":"INFO","logger":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","message":"Starting Servlet engine: [Apache Tomcat/10.1.39]","exception":""}
{"timestamp":"2025-05-08T16:29:45.809+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","message":"Initializing Spring embedded WebApplicationContext","exception":""}
{"timestamp":"2025-05-08T16:29:45.810+0900","level":"INFO","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","message":"Root WebApplicationContext: initialization completed in 3325 ms","exception":""}
{"timestamp":"2025-05-08T16:29:46.312+0900","level":"WARN","logger":"com.zaxxer.hikari.HikariConfig","thread":"restartedMain","message":"HikariPool-1 - idleTimeout is close to or more than maxLifetime, disabling it.","exception":""}
{"timestamp":"2025-05-08T16:29:46.313+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Starting...","exception":""}
{"timestamp":"2025-05-08T16:29:46.605+0900","level":"INFO","logger":"com.zaxxer.hikari.pool.HikariPool","thread":"restartedMain","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56b922a9","exception":""}
{"timestamp":"2025-05-08T16:29:46.607+0900","level":"INFO","logger":"com.zaxxer.hikari.HikariDataSource","thread":"restartedMain","message":"HikariPool-1 - Start completed.","exception":""}
{"timestamp":"2025-05-08T16:29:46.660+0900","level":"INFO","logger":"org.flywaydb.core.FlywayExecutor","thread":"restartedMain","message":"Database: jdbc:mysql://localhost:3307/flexrate?serverTimezone=Asia/Seoul (MySQL 8.0)","exception":""}
{"timestamp":"2025-05-08T16:29:46.777+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbValidate","thread":"restartedMain","message":"Successfully validated 1 migration (execution time 00:00.042s)","exception":""}
{"timestamp":"2025-05-08T16:29:46.810+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Current version of schema `flexrate`: 1","exception":""}
{"timestamp":"2025-05-08T16:29:46.817+0900","level":"INFO","logger":"org.flywaydb.core.internal.command.DbMigrate","thread":"restartedMain","message":"Schema `flexrate` is up to date. No migration necessary.","exception":""}
{"timestamp":"2025-05-08T16:29:46.961+0900","level":"INFO","logger":"org.hibernate.jpa.internal.util.LogHelper","thread":"restartedMain","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","exception":""}
{"timestamp":"2025-05-08T16:29:47.025+0900","level":"INFO","logger":"org.hibernate.Version","thread":"restartedMain","message":"HHH000412: Hibernate ORM core version 6.6.11.Final","exception":""}
{"timestamp":"2025-05-08T16:29:47.069+0900","level":"INFO","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","thread":"restartedMain","message":"HHH000026: Second-level cache disabled","exception":""}
{"timestamp":"2025-05-08T16:29:47.417+0900","level":"INFO","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread":"restartedMain","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","exception":""}
{"timestamp":"2025-05-08T16:29:47.531+0900","level":"WARN","logger":"org.hibernate.orm.deprecation","thread":"restartedMain","message":"HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","exception":""}
{"timestamp":"2025-05-08T16:29:47.546+0900","level":"INFO","logger":"org.hibernate.orm.connections.pooling","thread":"restartedMain","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']\n\tDatabase driver: undefined/unknown\n\tDatabase version: 8.0.42\n\tAutocommit mode: undefined/unknown\n\tIsolation level: undefined/unknown\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","exception":""}
{"timestamp":"2025-05-08T16:29:48.758+0900","level":"INFO","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread":"restartedMain","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","exception":""}
{"timestamp":"2025-05-08T16:29:48.902+0900","level":"INFO","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread":"restartedMain","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","exception":""}
{"timestamp":"2025-05-08T16:29:49.704+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread":"restartedMain","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","exception":""}
{"timestamp":"2025-05-08T16:29:49.747+0900","level":"WARN","logger":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration","thread":"restartedMain","message":"\r\n\r\nUsing generated security password: ****\r\n\r\nThis generated password is for development use only. Your security configuration must be updated before running your application in production.\r\n","exception":""}
{"timestamp":"2025-05-08T16:29:49.757+0900","level":"INFO","logger":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","thread":"restartedMain","message":"Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager","exception":""}
{"timestamp":"2025-05-08T16:29:50.627+0900","level":"INFO","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","message":"Exposing 1 endpoint beneath base path '/actuator'","exception":""}
{"timestamp":"2025-05-08T16:29:51.587+0900","level":"INFO","logger":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","message":"LiveReload server is running on port 35729","exception":""}
{"timestamp":"2025-05-08T16:29:51.680+0900","level":"INFO","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","message":"Tomcat started on port 8080 (http) with context path '/'","exception":""}
{"timestamp":"2025-05-08T16:29:51.699+0900","level":"INFO","logger":"com.flexrate.flexrate_back.FlexrateBackApplication","thread":"restartedMain","message":"Started FlexrateBackApplication in 10.407 seconds (process running for 10.961)","exception":""}
{"timestamp":"2025-05-08T16:30:02.924+0900","level":"INFO","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T16:30:02.924+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Initializing Servlet 'dispatcherServlet'","exception":""}
{"timestamp":"2025-05-08T16:30:02.926+0900","level":"INFO","logger":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","message":"Completed initialization in 2 ms","exception":""}
{"timestamp":"2025-05-08T16:30:03.910+0900","level":"INFO","logger":"org.springdoc.api.AbstractOpenApiResource","thread":"http-nio-8080-exec-9","message":"Init duration for springdoc-openapi is: 563 ms","exception":""}
{"timestamp":"2025-05-08T16:30:39.372+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T16:30:39.566+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:30:39.612+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:32:49.383+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T16:32:49.410+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T16:32:49.492+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:38:26.789+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    select\r\n        m1_0.member_id \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=? \r\n    limit\r\n        ?","exception":""}
{"timestamp":"2025-05-08T16:38:26.870+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        member\r\n        (birth_date, consume_goal, consumption_type, created_at, email, last_login_at, last_login_method, name, password_hash, password_last_changed_at, phone, role, sex, status, updated_at) \r\n    values\r\n        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:38:26.888+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-2","message":"\r\n    insert \r\n    into\r\n        fido_credential\r\n        (device_info, is_active, last_used_date, member_id, public_key, sign_count) \r\n    values\r\n        (?, ?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:39:09.814+0900","level":"WARN","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-6","message":"[A000] 필수 입력값이 누락되었습니다. | detail=JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name","exception":""}
{"timestamp":"2025-05-08T16:39:09.817+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-6","message":"Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name]","exception":""}
{"timestamp":"2025-05-08T16:39:12.788+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T16:39:12.793+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T16:39:12.870+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-4","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
{"timestamp":"2025-05-08T16:46:19.414+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-10","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T16:46:19.448+0900","level":"ERROR","logger":"com.flexrate.flexrate_back.common.exception.GlobalExceptionHandler","thread":"http-nio-8080-exec-10","message":"[U001] 사용자를 찾을 수 없습니다 | path=/api/auth/login | detail=사용자를 찾을 수 없습니다","exception":""}
{"timestamp":"2025-05-08T16:46:19.450+0900","level":"WARN","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread":"http-nio-8080-exec-10","message":"Resolved [com.flexrate.flexrate_back.common.exception.FlexrateException: 사용자를 찾을 수 없습니다]","exception":""}
{"timestamp":"2025-05-08T16:46:29.086+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    select\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at \r\n    from\r\n        member m1_0 \r\n    where\r\n        m1_0.email=?","exception":""}
{"timestamp":"2025-05-08T16:46:29.093+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    select\r\n        la1_0.application_id,\r\n        la1_0.applied_at,\r\n        la1_0.credit_score,\r\n        la1_0.end_date,\r\n        la1_0.executed_at,\r\n        la1_0.member_id,\r\n        m1_0.member_id,\r\n        m1_0.birth_date,\r\n        m1_0.consume_goal,\r\n        m1_0.consumption_type,\r\n        m1_0.created_at,\r\n        m1_0.email,\r\n        m1_0.last_login_at,\r\n        m1_0.last_login_method,\r\n        m1_0.name,\r\n        m1_0.password_hash,\r\n        m1_0.password_last_changed_at,\r\n        m1_0.phone,\r\n        m1_0.role,\r\n        m1_0.sex,\r\n        m1_0.status,\r\n        m1_0.updated_at,\r\n        p1_0.product_id,\r\n        p1_0.description,\r\n        p1_0.max_amount,\r\n        p1_0.max_rate,\r\n        p1_0.min_rate,\r\n        p1_0.name,\r\n        p1_0.terms,\r\n        la1_0.rate,\r\n        la1_0.remain_amount,\r\n        la1_0.start_date,\r\n        la1_0.status,\r\n        la1_0.total_amount \r\n    from\r\n        loan_application la1_0 \r\n    join\r\n        member m1_0 \r\n            on m1_0.member_id=la1_0.member_id \r\n    left join\r\n        loan_product p1_0 \r\n            on p1_0.product_id=la1_0.product_id \r\n    where\r\n        la1_0.member_id=?","exception":""}
{"timestamp":"2025-05-08T16:46:29.191+0900","level":"DEBUG","logger":"org.hibernate.SQL","thread":"http-nio-8080-exec-9","message":"\r\n    insert \r\n    into\r\n        mfa_log\r\n        (authenticated_at, device_info, mfa_type, result, transaction_id) \r\n    values\r\n        (?, ?, ?, ?, ?)","exception":""}
